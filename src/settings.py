"""
Django settings for src project.

Generated by 'django-admin startproject' using Django 4.2.6.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""
import os
from pathlib import Path

import dotenv

dotenv.load_dotenv(dotenv.find_dotenv())

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get("SECRET_KEY")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['127.0.0.1', '0.0.0.0', 'example.com']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    # Third party apps
    'widget_tweaks',
    'easy_thumbnails',

    # My apps
    'src.my_apps.blogs',
    'src.my_apps.profiles',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'src.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'src/templates')],  # добавили папку для поиска шаблонов
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'src.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    # 'default': {
    #     'ENGINE': 'django.db.backends.sqlite3',
    #     'NAME': BASE_DIR / 'db.sqlite3',
    # }
    "default": {
        "ENGINE": "django.db.backends.postgresql",

        "USER":     os.environ.get("POSTGRES_USER"),
        "NAME":     os.environ.get("POSTGRES_DB"),
        "PASSWORD": os.environ.get("POSTGRES_PASS"),
        "PORT":     os.environ.get("POSTGRES_PORT"),
        "HOST":     os.environ.get("POSTGRES_HOST"),
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

STATICFILES_DIRS = [
     BASE_DIR / "src/static"
 ]

MEDIA_URL = '/media/'

MEDIA_ROOT = BASE_DIR / 'src/media'

#
# # формат даты, которую будет воспринимать наш задачник (вспоминаем модуль по фильтрам)
# APSCHEDULER_DATETIME_FORMAT = "N j, Y, f:s a"
#
# # если задача не выполняется за 25 секунд, то она автоматически снимается, можете поставить время побольше,
# # но как правило, это сильно бьёт по производительности сервера
# APSCHEDULER_RUN_NOW_TIMEOUT = 25  # Seconds

"""
Celery settings
pip install eventlet 
и запускать celery через команду: celery -A Ваш проект worker -l info -P eventlet
"""
# # указывает на URL брокера сообщений (Redis). По умолчанию он находится на порту 6379.
# CELERY_BROKER_URL = 'redis://:YLaaMKbdSS68cAvnlcqPiKWKihXXEFrp@redis-18941.c232.us-east-1-2.ec2.cloud.redislabs.com:18941/0'
# # указывает на хранилище результатов выполнения задач.
# CELERY_RESULT_BACKEND = 'redis://:YLaaMKbdSS68cAvnlcqPiKWKihXXEFrp@redis-12880.c283.us-east-1-4.ec2.cloud.redislabs.com:12880/0'
# # допустимый формат данных.
# CELERY_ACCEPT_CONTENT = ['application/json']
# # метод сериализации задач.
# CELERY_TASK_SERIALIZER = 'json'
# # метод сериализации результатов.
# CELERY_RESULT_SERIALIZER = 'json'

CELERY_BROKER_URL = 'redis://localhost:6379'
RESULT_BACKEND = 'redis://localhost:6379'
# CELERY_ACCEPT_CONTENT = ['application/json']
# CELERY_TASK_SERIALIZER = 'json'
# CELERY_RESULT_SERIALIZER = 'json'
